name: Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: "Load cached venv"
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
            venv-${{ runner.os }}-
            venv-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade poetry
          poetry config virtualenvs.in-project true
          poetry install
      - name: Lint with mypy
        run: poetry run mypy --show-error-codes .
      - name: Lint with black
        run: poetry run black --check .
      - name: Test with pytest
        run: poetry run pytest
